<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on yxzoe&#39;s website</title>
    <link>/post/</link>
    <description>Recent content in Posts on yxzoe&#39;s website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title> 第三章：操纵数据：构建子集</title>
      <link>/2020/05/27/%E6%93%8D%E7%BA%B5%E6%95%B0%E6%8D%AE-%E6%9E%84%E5%BB%BA%E5%AD%90%E9%9B%86/</link>
      <pubDate>Wed, 27 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/05/27/%E6%93%8D%E7%BA%B5%E6%95%B0%E6%8D%AE-%E6%9E%84%E5%BB%BA%E5%AD%90%E9%9B%86/</guid>
      <description>3-1 基本方法构建子集（subsetting）原始数据（raw dadaset)→预处理后的数据（clean dataset）基本方法：[]：提取一个或多个类型相同的元素$:按名字从列表或数据库中提取元素Rstudio实操构建向量x，其内容为1~10，提取x中的第一个元素：x[1]。1为第一个元素的下标。R语言与其他语言不同，内容下标是从1开始的，而不是0获取前5个元素：x[1:5]获取大于5的元素：x[x&amp;gt;5]；如果直接输入x&amp;gt;5，出现的是向量内元素是否大于5的判断结果获取“并”关系的数据：x&amp;gt;5且x&amp;lt;7的内容：x[x&amp;gt;5 &amp;amp; x&amp;lt;7],&amp;amp;为“和、且”的意思获取“或”关系的数据：x&amp;lt;3或x&amp;gt;7的内容：x[x&amp;lt;3 | x&amp;gt;7]，|为“或”的意思通过元素的名字来获取元素数据：构建向量y，用names函数将y的四个元素分别命名。若想获取第二个元素，可以直接用y[2]，也可以用y[“b”]（注意元素名字要用“”框起来），既能获取元素名字，又能获取内容3-2 矩阵的子集从矩阵中获取元素内容：x &amp;lt;- matrix(1:6, nrow=2, ncol=3)创建矩阵x，获取第1行第2列的元素：输入x[1,2]获取整个第1行的元素：输入x[1,]，把列空着就行了获取整个第1列的元素：输入x[,1]获取第1行第1列和第3列的元素：输入x[2,c(1,3)]，用c把列的1和3连起来虽然是从矩阵里拿出来的，但是用x[1,2]返回的是一个向量integer如果想返回的是矩阵，就在2后面加drop=FALSE,返回的就是矩阵了3-3 数据框的子集先创建一个数据框x要将第3列第2、4行的元素变成缺失值：x$v3[c(2,4)] &amp;lt;- NA获取数据框里第2列的元素，类似于矩阵的操作：x[,2]或者x[,“v2”]。（这个v2是第二列的名称，所以要加引号）在括号里嵌套一个which，输出结果一样which的作用是 判断哪些是真构建子集：subset()函数
3-4 列表的子集-列表的子集 - []/$/[]/[] - 嵌套列表/不完全匹配（partial matching)</description>
    </item>
    
    <item>
      <title>第四章：操纵数据：重要函数的使用</title>
      <link>/2020/05/27/%E6%93%8D%E7%BA%B5%E6%95%B0%E6%8D%AE-%E9%87%8D%E8%A6%81%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 27 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/05/27/%E6%93%8D%E7%BA%B5%E6%95%B0%E6%8D%AE-%E9%87%8D%E8%A6%81%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>4-1 R语言函数lapply处理循环R不仅有for/while循环语句，还有一句话就能实现循环的函数排序总结数据信息1.lapply可以循环处理列表中每一个元素lapply(列表，函数/函数名，其他参数）, 结果总是返回一个列表str()函数：将任意R对象以一种简洁紧凑的方式呈现出来function意思是函数，x是列表，FUN是你要进行怎样的处理创建一个列表xmean是求平均，lapply分别对x中的a、b元素求平均值sapply是对lapply的结果进行化简（能化简的情况下）当结果列表元素长度均为1，返回向量当列表元素长度相同且大于1，返回矩阵当长度不相同则无法化简，结果和lapply一样 -sapply把lapply返回的列表简化成了一个向量创建向量x，值为1~4runif意思是从一个均匀分布的总体里抽取若干个数出来当x值为1时，抽出来1个数；x为2时，抽出来2个数，以此类推虽然x是向量不是列表，但在lapply中会自动强制转化为列表min和max是对前面的runif进行限定runif默认是从01进行抽取，这样设定后就从0100抽取了4-2 R语言函数applyapply：沿着数组的某一维度处理数据例如：将函数用于矩阵的行或列, 虽然与for/while循环的效率相似，但是只用一句话就可以完成apply（数组，维度，函数/函数名）创建一个矩阵apply(x,2,mean) 意思是沿着x的第2个维度求平均矩阵的第一个维度是行，第二个维度是列，因此这里的意思就是，对矩阵x的列求平均求列的和只需把mean换成sum ##更简单的方法求行/列的和/平均rowSums(x)rowMeans(x)colSums(x)colMeans(x)创建一个矩阵rnorm意思是随机从正态分布的总体里抽取100个数后面的10，10意思是把这100个数排成10×10的矩阵quantile意思是求数据的百分位点probs是对quantile进行限定，要求25%和75%百分位点所对应的数据4-3 R语言函数mapplylapply的多元版本 ## mapply（函数/函数名，数据，函数相关参数）创建一个列表，内容是4个1，3个2，2个3，1个4，用rep函数用mapply就只要用一次rep，数据是14，数量是41 ## 如何自定义函数：函数命名为s，function代表它是一个函数，n表示要从正态分布总体中抽取的个数，mean代表随机分布总体的均值，std代表随机分布代表的标准差在花括号{}中输入函数体。用rnorm函数，这个函数的意思是，从均值为mean，标准差为std的总体里抽取n个数据 -把这三行代码运行一下就可以调用它了如s(4,0,1)，意思是从均值为0，标准差为1的正态分布里抽取4个数据 ## 与mapply结合，第二个参数1：5对应s中第一个参数，也就是抽几个数；5：1对应s的第二个参数，即分布均值；2就是标准差运行后得到5个元素，第一个元素1个数，第二个2个，第五个元素5个数据且第一个元素来自均值为5，标准差为2的总体第二个元素的数据来自均值为4，标准差为2 的总体第五个元素来自均值为1，标准差为2的总体</description>
    </item>
    
    <item>
      <title>第二章：R语言的数据结构</title>
      <link>/2020/05/26/r%E8%AF%AD%E8%A8%80%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/05/26/r%E8%AF%AD%E8%A8%80%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description>2-1 对象和属性R语言对象的5种基本类型（classes of object)：字符(character)数值(numeric:real numbers)整数(integer)复数(complex):1+2i逻辑(logical:True/False)Rstudio实操创建数值型数值（赋值）：x=1 → x &amp;lt;- 1 回车即可。 （99%的情况下，赋值用x=1也是会报错的，但是在一些极端的情况下不得行，所以一般还是使用箭头）查看x的值：输入x，回车，得到 [1] 此处的[1]代表，它后面的元素是x的第一个元素；后面的1代表x中存储的内容是1
查看数据类型的函数“class”：输入“class（x）”回车，得到 [1] “numeric” ,意思是：x是一个数值型变量，且x的值可以是整数或小数
创建整数型数值：”numeric“一般表示数值，如果想强调数值是”整数“，在赋值时，在数值后面加一个L即可。 例如：x &amp;lt;- 2L，回车，再用class查看数据类型，英文会变成”integer“R对字母大小写非常敏感，X与x将产生两个不同的变量，使用时要非常注意
创建字符型数值：输入y&amp;lt;- “hello”（比数值型多一对双引号），回车即可。此时用class(y)得到的英文就是“character”字符型
创建逻辑型数值：输入t &amp;lt;-TRUE，回车即可（在R里，TRUE/FALSE都必须用大写）
创建复数型字符：输入x&amp;lt;-1+2i，回车，此时x的数据类型就是“complex”。（用的比较少）
R的对象的属性名称(name)维度(dimensions: matrix, array)类型(class)长度(length)2-2 向量（vector）数据结构：向量（vector)：可包含多个元素，但这些元素必须属于同一种数据类型（代码都是一次性的，如果想重复利用某组代码，就要新建一个脚本文件，把代码保存在里面）为了让文件更有可读性，一般会用“#”来注释创建向量的方法：x &amp;lt;- vector(“character”, length = 10) ，即括号内是数值的类型和向量的长度。在控制台内输入这个，回车即可运行命令；而在脚本文件中，需要鼠标选中这一行命令，再点击文本框右上角的“run”来运行命令，得到一个有10个位置的空向量</description>
    </item>
    
    <item>
      <title>Learning Rmarkdown</title>
      <link>/2020/05/17/learning-rmarkdown/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/05/17/learning-rmarkdown/</guid>
      <description>什么是R Markdown通过R来书写可重复动态报告的一种格式。利用它在幻灯片、pdf、html文档、Word文件中嵌入R代码和结果。 依赖R studio对数据进行分析、处理后产生高质量的文件、文档、报告的书写工具。
关键字：Analyze、Share、Reproduce.
Rstudio→Rmd
R Markdown的优点可再现、可复制 由于R Markdown是在R studio中运行，而R是一个开源性的版本控制系统，所以利用Rmd书写时可以找回之前的版本。丰富的文档排版格式 RMarkdown支持数十种静态和动态输出格式，包括HTML，PDF，MSWord，光束，HTML5幻灯片，Tufte-style handouts，books, dashboards, shiny applications, 科学文章, 网站以及更多内容。更直接的代码运行能力 直接在R studio的运行界面即可书写，语法简单易懂。Rmd可以在生成文档时直接运行插入的代码块，并将运行结果打印在最终文档中。支持多种语言 不仅支持R语言一种方式，你还可以使用Python，Java Script等其他语言生成你想要的结果。便于分享和整理思路 Rmd的页面简介，没有word中繁杂的格式、字体、颜色的选择，可以帮助创作者专心于内容的书写。Rmd 的用途写博客
Markdown的语法简洁明了、学习容易，而且功能比纯文本更强，因此有很多人用它写博客编写说明文档
R Markdown可以编写说明文档，并且以“README.md”的文件名保存在软件的目录下面编写学术论文、期刊杂志、数据报告等规范格式的文档
通过 Pandoc 将 Markdown 转化成 LaTex，再由强大的 LaTex 转换成 HTML、PDF、Word做PPT
通过xaringan包，生 HTML5 幻灯片，可以在网页浏览器里打开阅览在Rstudio中写内容、更新网站
R Studio中的R Markdown，可直接在R Studio里编辑post的内容.
Rmd 工作流程Rmd工作流程图
Rmd 部分常见基本语法1.</description>
    </item>
    
    <item>
      <title>Markdown基本语法</title>
      <link>/2020/05/17/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/05/17/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</guid>
      <description>1.标题“#”＋空格 后加标题，有几个#就是几级标题，最多支持6级
2.段落格式可以直接写，Ctrl+0可以使当前行变为段落，用两个以上空格＋回车实现换行
3.写作时常用的操作3.1 突出文本斜体：文字两端加* 或_；快捷键Ctrl+l如：斜体
加粗：文字两端加两个*或两个_；快捷键Ctrl+B如：加粗
粗斜体：文字两端加三个*或三个_；相当于上面两个加起来如：粗斜体
高亮文本：文字两端加两个=如：==high==（？？？它为啥不亮？）
删除线：文字两端加两个~如：删除
引用文本：文字前加一个&amp;gt;，注意&amp;gt;要放行首，前面不能有别的字引用文本
下划线：通过HTML的u标签实现，快捷键Ctrl+U如：下划线
分割线：在一行中使用三个以上的*、-、_即可，不能有别的东西如：
文字排版：-的数量不固定，看好-和:的位置就行了居中： :———:居右：———:居左：:———-3.2 生成列表无序列表：前面是小圆点，默认先出现实心圆，二级为空心；用*、+、-加空格即可跳出原有层次（如把空心点变回实心点）、恢复缩进：用Ctrl+[有序列表：前面是数字序号；用1+.加空格即可，和Word操作一样任务列表：前面是小方框，完成任务可以显示打勾；用“-+空格+[]+任务内容”，任务完成后“-[x]”+任务内容即可。如：[ ] 待完成[x] 已完成3.</description>
    </item>
    
  </channel>
</rss>